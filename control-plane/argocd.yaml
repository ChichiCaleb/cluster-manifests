---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-aws-argocd-hub
spec:
  goTemplate: true
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - merge:
        mergeKeys: [server]
        generators:
          - clusters:
              values:
                addonChart: argo-cd
                
                addonChartVersion: 6.6.0
                addonChartRepository: https://argoproj.github.io/argo-helm
              selector:
                matchExpressions:
                  - key: enable_argocd
                    operator: In
                    values: ['true']
         
  template:
    metadata:
      name: addon-{{.name}}-aws-{{.values.addonChart}}
    spec:
      project: default
      sources:
        - repoURL: '{{metadata.annotations.addons_git_repo}}'
          targetRevision: '{{metadata.annotations.addons_git_revision}}'
          ref: values
        - chart: '{{.values.addonChart}}'
          repoURL: '{{.values.addonChartRepository}}'
          targetRevision: '{{.values.addonChartVersion}}'
          helm:
            releaseName: '{{.values.addonChart}}'
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/environments/base/{{.values.addonChart}}/values.yaml
              - $values/environments/{{.metadata.labels.environment}}/{{values.addonChart}}/values.yaml

            values: |
              
              global:
                domain: {{.metadata.annotations.argocd_domain}}
              server:
                service:
                  type: "ClusterIP"
                ingress:
                  enabled: true
                  controller: "aws"
                  ingressClassName: "alb"
                  annotations:
                    alb.ingress.kubernetes.io/scheme: "internet-facing"
                    alb.ingress.kubernetes.io/target-type: "ip"
                    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
                    alb.ingress.kubernetes.io/listen-ports: "[{\"HTTP\":80},{\"HTTPS\":443}]"
                    alb.ingress.kubernetes.io/ssl-redirect: "443"
                    alb.ingress.kubernetes.io/tags: "Environment=hub,GitOps=true"
                    alb.ingress.kubernetes.io/group.name: apps
                    alb.ingress.kubernetes.io/load-balancer-name: gitops-platform
                  aws:
                    serviceType: "ClusterIP"  # Instance mode needs type NodePort, IP mode needs type ClusterIP or NodePort
                    backendProtocolVersion: "GRPC"  # This tells AWS to send traffic from the ALB using HTTP2. Can use gRPC as well if you want to leverage gRPC specific features
                ingressGrpc:
                  enabled: true
                  isAWSALB: true
                  awsALB:
                    serviceType: "ClusterIP"  # Instance mode needs type NodePort, IP mode needs type ClusterIP or NodePort
                    backendProtocolVersion: "GRPC"  # This tells AWS to send traffic from the ALB using HTTP2. Can use gRPC as well if you want to leverage gRPC specific features
      destination:
        namespace: '{{default "argocd" .metadata.annotations.argocd_namespace}}'
        name: '{{.name}}'
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.
        syncWave: 0




